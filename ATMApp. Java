import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class ATM {
    private Map<String, Account> accounts;
    private Scanner scanner;

    public ATM() {
        accounts = new HashMap<>();
        scanner = new Scanner(System.in);

        // Initialize accounts for testing
        accounts.put("12345", new Account("12345", "John Doe", 1000.0));
        accounts.put("67890", new Account("67890", "Jane Doe", 500.0));
    }

    public void run() {
        System.out.println("Welcome to the ATM!");

        while (true) {
            System.out.print("Enter your account number (or 'exit' to quit): ");
            String accountNumber = scanner.nextLine();

            if (accountNumber.equalsIgnoreCase("exit")) {
                break;
            }

            Account account = accounts.get(accountNumber);

            if (account == null) {
                System.out.println("Account not found. Please try again.");
                continue;
            }

            System.out.print("Enter your PIN (for simplicity, we'll use the last 2 digits of the account number): ");
            String pin = scanner.nextLine();

            if (!pin.equals(accountNumber.substring(accountNumber.length() - 2))) {
                System.out.println("Invalid PIN. Please try again.");
                continue;
            }

            while (true) {
                System.out.println("\nChoose an option:");
                System.out.println("1. Check Balance");
                System.out.println("2. Withdraw");
                System.out.println("3. Deposit");
                System.out.println("4. Logout");

                System.out.print("Enter your choice: ");
                int choice = scanner.nextInt();
                scanner.nextLine(); // Consume newline left-over

                switch (choice) {
                    case 1:
                        System.out.println("Your balance is: $" + account.getBalance());
                        break;
                    case 2:
                        System.out.print("Enter amount to withdraw: $");
                        double withdrawAmount = scanner.nextDouble();
                        scanner.nextLine(); // Consume newline left-over
                        account.withdraw(withdrawAmount);
                        break;
                    case 3:
                        System.out.print("Enter amount to deposit: $");
                        double depositAmount = scanner.nextDouble();
                        scanner.nextLine(); // Consume newline left-over
                        account.deposit(depositAmount);
                        break;
                    case 4:
                        System.out.println("Logging out...");
                        break;
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }

                if (choice == 4) {
                    break;
                }
            }
        }

        System.out.println("Thank you for using the ATM!");
    }

    public static void main(String[] args) {
        ATM atm = new ATM();
        atm.run();
    }
}

class Account {
    private String accountNumber;
    private String accountHolderName;
    private double balance;

    public Account(String accountNumber, String accountHolderName, double balance) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = balance;
    }

    public double getBalance() {
        return balance;
    }

    public void withdraw(double amount) {
        if (amount > balance) {
            System.out.println("Insufficient balance.");
        } else {
            balance -= amount;
            System.out.println("Withdrawal successful. New balance: $" + balance);
        }
    }

    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposit successful. New balance: $" + balance);
    }
}
